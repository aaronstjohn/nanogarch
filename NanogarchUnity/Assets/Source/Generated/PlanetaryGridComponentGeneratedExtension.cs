//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public PlanetaryGridComponent planetaryGrid { get { return (PlanetaryGridComponent)GetComponent(CoreComponentIds.PlanetaryGrid); } }
        public bool hasPlanetaryGrid { get { return HasComponent(CoreComponentIds.PlanetaryGrid); } }

        public Entity AddPlanetaryGrid(TruncatedIcosahedron newGeometry) {
            var component = CreateComponent<PlanetaryGridComponent>(CoreComponentIds.PlanetaryGrid);
            component.geometry = newGeometry;
            return AddComponent(CoreComponentIds.PlanetaryGrid, component);
        }

        public Entity ReplacePlanetaryGrid(TruncatedIcosahedron newGeometry) {
            var component = CreateComponent<PlanetaryGridComponent>(CoreComponentIds.PlanetaryGrid);
            component.geometry = newGeometry;
            ReplaceComponent(CoreComponentIds.PlanetaryGrid, component);
            return this;
        }

        public Entity RemovePlanetaryGrid() {
            return RemoveComponent(CoreComponentIds.PlanetaryGrid);
        }
    }

    public partial class Context {

        public Entity planetaryGridEntity { get { return GetGroup(CoreMatcher.PlanetaryGrid).GetSingleEntity(); } }
        public PlanetaryGridComponent planetaryGrid { get { return planetaryGridEntity.planetaryGrid; } }
        public bool hasPlanetaryGrid { get { return planetaryGridEntity != null; } }

        public Entity SetPlanetaryGrid(TruncatedIcosahedron newGeometry) {
            if(hasPlanetaryGrid) {
                throw new EntitasException("Could not set planetaryGrid!\n" + this + " already has an entity with PlanetaryGridComponent!",
                    "You should check if the context already has a planetaryGridEntity before setting it or use context.ReplacePlanetaryGrid().");
            }
            var entity = CreateEntity();
            entity.AddPlanetaryGrid(newGeometry);
            return entity;
        }

        public Entity ReplacePlanetaryGrid(TruncatedIcosahedron newGeometry) {
            var entity = planetaryGridEntity;
            if(entity == null) {
                entity = SetPlanetaryGrid(newGeometry);
            } else {
                entity.ReplacePlanetaryGrid(newGeometry);
            }

            return entity;
        }

        public void RemovePlanetaryGrid() {
            DestroyEntity(planetaryGridEntity);
        }
    }
}

    public partial class CoreMatcher {

        static IMatcher _matcherPlanetaryGrid;

        public static IMatcher PlanetaryGrid {
            get {
                if(_matcherPlanetaryGrid == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.PlanetaryGrid);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherPlanetaryGrid = matcher;
                }

                return _matcherPlanetaryGrid;
            }
        }
    }
