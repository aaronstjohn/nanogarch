//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public DestinationComponent destination { get { return (DestinationComponent)GetComponent(CoreComponentIds.Destination); } }
        public bool hasDestination { get { return HasComponent(CoreComponentIds.Destination); } }

        public Entity AddDestination(float newDistance, float newStartTime, UnityEngine.Vector3 newSrcPosition, UnityEngine.Vector3 newDestPosition, float newDistanceHeading, UnityEngine.Vector3 newSrcHeading, UnityEngine.Vector3 newDestHeading, int newDestCellId) {
            var component = CreateComponent<DestinationComponent>(CoreComponentIds.Destination);
            component.distance = newDistance;
            component.startTime = newStartTime;
            component.srcPosition = newSrcPosition;
            component.destPosition = newDestPosition;
            component.distanceHeading = newDistanceHeading;
            component.srcHeading = newSrcHeading;
            component.destHeading = newDestHeading;
            component.destCellId = newDestCellId;
            return AddComponent(CoreComponentIds.Destination, component);
        }

        public Entity ReplaceDestination(float newDistance, float newStartTime, UnityEngine.Vector3 newSrcPosition, UnityEngine.Vector3 newDestPosition, float newDistanceHeading, UnityEngine.Vector3 newSrcHeading, UnityEngine.Vector3 newDestHeading, int newDestCellId) {
            var component = CreateComponent<DestinationComponent>(CoreComponentIds.Destination);
            component.distance = newDistance;
            component.startTime = newStartTime;
            component.srcPosition = newSrcPosition;
            component.destPosition = newDestPosition;
            component.distanceHeading = newDistanceHeading;
            component.srcHeading = newSrcHeading;
            component.destHeading = newDestHeading;
            component.destCellId = newDestCellId;
            ReplaceComponent(CoreComponentIds.Destination, component);
            return this;
        }

        public Entity RemoveDestination() {
            return RemoveComponent(CoreComponentIds.Destination);
        }
    }
}

    public partial class CoreMatcher {

        static IMatcher _matcherDestination;

        public static IMatcher Destination {
            get {
                if(_matcherDestination == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.Destination);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherDestination = matcher;
                }

                return _matcherDestination;
            }
        }
    }
